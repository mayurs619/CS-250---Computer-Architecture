<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.15.0" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0"/>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#HDL-IP" name="7">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------&#13;
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
library ieee;&#13;
  use ieee.std_logic_1164.all;&#13;
  --use ieee.numeric_std.all;&#13;
&#13;
entity VHDL_Component is&#13;
  port(&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_vector(3 downto 0)  -- output vector example&#13;
    );&#13;
end VHDL_Component;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
architecture type_architecture of VHDL_Component is&#13;
&#13;
&#13;
begin&#13;
&#13;
&#13;
end type_architecture;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="8">
    <tool name="TclGeneric">
      <a name="content">library ieee;&#13;
use ieee.std_logic_1164.all;&#13;
&#13;
entity TCL_Generic is&#13;
  port(&#13;
    --Insert input ports below&#13;
    horloge_i  : in  std_logic;                    -- input bit example&#13;
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example&#13;
&#13;
	  --Insert output ports below&#13;
    max_o      : out std_logic;                    -- output bit example&#13;
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example&#13;
  );&#13;
end TCL_Generic;&#13;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="9">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="10"/>
  <lib desc="#Logisim ITA components" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="9" map="Button2" name="Menu Tool"/>
    <tool lib="9" map="Button3" name="Menu Tool"/>
    <tool lib="9" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="9" name="Poke Tool"/>
    <tool lib="9" name="Edit Tool"/>
    <tool lib="9" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
  <circuit name="main">
    <a name="circuit" val="main"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(270,110)" to="(330,110)"/>
    <wire from="(400,180)" to="(460,180)"/>
    <wire from="(60,130)" to="(60,390)"/>
    <wire from="(60,390)" to="(120,390)"/>
    <wire from="(50,620)" to="(110,620)"/>
    <wire from="(110,550)" to="(110,620)"/>
    <wire from="(120,460)" to="(120,470)"/>
    <wire from="(140,460)" to="(140,470)"/>
    <wire from="(120,390)" to="(300,390)"/>
    <wire from="(300,380)" to="(300,390)"/>
    <wire from="(300,280)" to="(300,300)"/>
    <wire from="(90,70)" to="(90,90)"/>
    <wire from="(110,500)" to="(110,520)"/>
    <wire from="(50,70)" to="(90,70)"/>
    <wire from="(110,620)" to="(340,620)"/>
    <wire from="(110,500)" to="(150,500)"/>
    <wire from="(90,90)" to="(130,90)"/>
    <wire from="(320,300)" to="(320,330)"/>
    <wire from="(280,200)" to="(280,230)"/>
    <wire from="(200,480)" to="(240,480)"/>
    <wire from="(130,300)" to="(130,330)"/>
    <wire from="(60,130)" to="(220,130)"/>
    <wire from="(240,320)" to="(240,480)"/>
    <wire from="(130,90)" to="(220,90)"/>
    <wire from="(300,300)" to="(320,300)"/>
    <wire from="(130,330)" to="(280,330)"/>
    <wire from="(330,160)" to="(350,160)"/>
    <wire from="(120,390)" to="(120,430)"/>
    <wire from="(260,280)" to="(260,320)"/>
    <wire from="(120,470)" to="(140,470)"/>
    <wire from="(240,320)" to="(260,320)"/>
    <wire from="(140,460)" to="(150,460)"/>
    <wire from="(340,380)" to="(340,620)"/>
    <wire from="(50,390)" to="(60,390)"/>
    <wire from="(130,90)" to="(130,270)"/>
    <wire from="(280,280)" to="(280,330)"/>
    <wire from="(330,110)" to="(330,160)"/>
    <wire from="(280,200)" to="(350,200)"/>
    <comp lib="0" loc="(50,70)" name="Pin">
      <a name="label" val="A"/>
    </comp>
    <comp lib="0" loc="(460,180)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="label" val="result"/>
    </comp>
    <comp lib="1" loc="(400,180)" name="OR Gate"/>
    <comp lib="1" loc="(270,110)" name="AND Gate"/>
    <comp lib="0" loc="(50,620)" name="Pin">
      <a name="label" val="C"/>
    </comp>
    <comp lib="0" loc="(50,390)" name="Pin">
      <a name="label" val="B"/>
    </comp>
    <comp lib="1" loc="(120,460)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(110,520)" name="NOT Gate">
      <a name="facing" val="north"/>
    </comp>
    <comp lib="1" loc="(200,480)" name="OR Gate"/>
    <comp lib="1" loc="(320,330)" name="OR Gate">
      <a name="facing" val="north"/>
    </comp>
    <comp lib="1" loc="(280,230)" name="AND Gate">
      <a name="facing" val="north"/>
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(130,300)" name="NOT Gate">
      <a name="facing" val="south"/>
    </comp>
  </circuit>
</project>
